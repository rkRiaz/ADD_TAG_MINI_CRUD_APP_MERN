[{"F:\\Working Place\\Aspyrer_assignment\\client\\src\\components\\SearchPopUp.js":"1","F:\\Working Place\\Aspyrer_assignment\\client\\src\\pages\\Home.js":"2","F:\\Working Place\\Aspyrer_assignment\\client\\src\\index.js":"3","F:\\Working Place\\Aspyrer_assignment\\client\\src\\App.js":"4","F:\\Working Place\\Aspyrer_assignment\\client\\src\\store\\actions\\popupAction.js":"5","F:\\Working Place\\Aspyrer_assignment\\client\\src\\store\\actions\\types.js":"6","F:\\Working Place\\Aspyrer_assignment\\client\\src\\store\\reducers\\popupReducer.js":"7","F:\\Working Place\\Aspyrer_assignment\\client\\src\\store\\reducers\\rootReducer.js":"8","F:\\Working Place\\Aspyrer_assignment\\client\\src\\store\\index.js":"9"},{"size":3896,"mtime":1612250419030,"results":"10","hashOfConfig":"11"},{"size":3125,"mtime":1612252235288,"results":"12","hashOfConfig":"11"},{"size":364,"mtime":1611986967180,"results":"13","hashOfConfig":"11"},{"size":435,"mtime":1611986937765,"results":"14","hashOfConfig":"11"},{"size":424,"mtime":1611931763757,"results":"15","hashOfConfig":"11"},{"size":86,"mtime":1612254136770,"results":"16","hashOfConfig":"11"},{"size":402,"mtime":1611933689731,"results":"17","hashOfConfig":"11"},{"size":184,"mtime":1612249054735,"results":"18","hashOfConfig":"11"},{"size":371,"mtime":1611986515059,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"148armp",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Working Place\\Aspyrer_assignment\\client\\src\\components\\SearchPopUp.js",["42"],"import React, {useState, useEffect} from 'react'\r\nimport './SearchPopUp.css'\r\nimport HighlightOffRoundedIcon from '@material-ui/icons/HighlightOffRounded';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport { Card, TextField } from '@material-ui/core';\r\nimport { popupAction } from '../store/actions/popupAction'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nfunction SearchPopUp() {\r\n    const [countries, setCountries] = useState(null)\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const { showPopup } = useSelector(state => state.popup);\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    useEffect(() => {\r\n        axios.get('http://localhost:8080/api/data/get-data')\r\n        .then(res => {\r\n            setCountries(res.data.countries)\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        })\r\n    }, [])\r\n\r\n    const offPopUp = e => {\r\n        e.preventDefault()\r\n        dispatch(popupAction())\r\n    }\r\n    const addTag = tag => e => {\r\n        e.preventDefault()\r\n        axios.post(`http://localhost:8080/api/data/add-tag`, {tag})\r\n        .then(res => {\r\n            setMessage(res.data.message)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    if(countries === null) {\r\n        return (\r\n            <div className=\"\">Loading</div>\r\n        )\r\n    } else {\r\n        return (\r\n            <Card className={showPopup ? \"popup\" : \"popup popup__hide\"}>\r\n                <div onClick={offPopUp} className=\"popup__offLayout\"></div>\r\n                <div className=\"popup__search\">\r\n                    <div className=\"popup__searchTop\">\r\n                        <TextField onChange={e => setSearchTerm(e.target.value)} className=\"popup__searchInput\" id=\"filled-basic\" label=\"Seacrh Country\" variant=\"filled\"/>\r\n                        <HighlightOffRoundedIcon onClick={offPopUp}/>\r\n                    </div>\r\n                    { message ? <Alert className=\"popup__alert\" severity=\"info\">{message}</Alert> : '' }\r\n                    <div className=\"popup__searchContents\">\r\n                            {\r\n                                countries\r\n                                //this will return partial matched countries\r\n                                .filter((val) => {\r\n                                    if(searchTerm === \"\") {\r\n                                        return val\r\n                                    } else if(val.toLowerCase().includes(searchTerm.toLocaleLowerCase())) {\r\n                                        return val  \r\n                                    }\r\n                                })\r\n                                //this will return first letter matched countries\r\n                                // .filter((val) => {\r\n                                //     if(searchTerm == \"\") {\r\n                                //         return val\r\n                                //     } else if(val.toLowerCase().charAt(0) == searchTerm) {\r\n                                //         return val  \r\n                                //     }\r\n                                // })\r\n                                .map((tag, index) => (\r\n                                    <div onClick = {addTag(tag)} key = {index}  className=\"popup__searchContentsItem\">\r\n                                        <div className=\"popup__searchContentsItemName\" key = {index}>{tag}</div>\r\n                                        <div className=\"\"><AddCircleOutlineIcon/></div>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                    </div>\r\n                </div>\r\n        \r\n            </Card>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default SearchPopUp\r\n","F:\\Working Place\\Aspyrer_assignment\\client\\src\\pages\\Home.js",[],"F:\\Working Place\\Aspyrer_assignment\\client\\src\\index.js",[],["43","44"],"F:\\Working Place\\Aspyrer_assignment\\client\\src\\App.js",[],"F:\\Working Place\\Aspyrer_assignment\\client\\src\\store\\actions\\popupAction.js",[],["45","46"],"F:\\Working Place\\Aspyrer_assignment\\client\\src\\store\\actions\\types.js",[],"F:\\Working Place\\Aspyrer_assignment\\client\\src\\store\\reducers\\popupReducer.js",[],"F:\\Working Place\\Aspyrer_assignment\\client\\src\\store\\reducers\\rootReducer.js",["47"],"import { combineReducers } from 'redux'\r\nimport popupReducer from './popupReducer'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    popup: popupReducer\r\n})\r\n\r\nexport default rootReducer","F:\\Working Place\\Aspyrer_assignment\\client\\src\\store\\index.js",[],{"ruleId":"48","severity":1,"message":"49","line":63,"column":47,"nodeType":"50","messageId":"51","endLine":63,"endColumn":49},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"52","replacedBy":"56"},{"ruleId":"54","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":19},"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-native-reassign",["62"],"no-negated-in-lhs",["63"],["62"],["63"],"no-unused-vars","'dataReducer' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]